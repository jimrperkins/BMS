[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BMS",
    "section": "",
    "text": "Preface\nEste material está diseñado para acompañar las sesiones prácticas de la asignatura “Biología Molecular de Sistemas”, que forma parte del grado de Bioquímica en la Universidad de Málaga. Se divide en 3 partes: una reintroducción a R, que estudiarás en un seminario de una hora, y 2 partes más extensas, donde utilizarás R para construir y analizar redes biológicas.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "reintro_a_r.html",
    "href": "reintro_a_r.html",
    "title": "1  (Re)introducción a R para Biología y Bioinformática",
    "section": "",
    "text": "1.1 Objetivos\nAl final de este tutorial, podrás:",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>(Re)introducción a R para Biología y Bioinformática</span>"
    ]
  },
  {
    "objectID": "reintro_a_r.html#objetivos",
    "href": "reintro_a_r.html#objetivos",
    "title": "1  (Re)introducción a R para Biología y Bioinformática",
    "section": "",
    "text": "Entender la sintaxis básica y la estructura de R.\nRealizar operaciones simples con datos.\nCrear gráficos básicos relevantes para la biología y la bioinformática.\nEntender los conceptos básicos del análisis de redes con igraph.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>(Re)introducción a R para Biología y Bioinformática</span>"
    ]
  },
  {
    "objectID": "reintro_a_r.html#comenzando",
    "href": "reintro_a_r.html#comenzando",
    "title": "1  (Re)introducción a R para Biología y Bioinformática",
    "section": "1.2 Comenzando",
    "text": "1.2 Comenzando\nR es un lenguaje poderoso para la computación estadística y gráfica, ampliamente utilizado en bioinformática. Para empezar a usar R, necesitas tener R y RStudio instalados en tu ordenador. Puedes descargarlos desde los siguientes enlaces: - Descargar R - Descargar RStudio",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>(Re)introducción a R para Biología y Bioinformática</span>"
    ]
  },
  {
    "objectID": "reintro_a_r.html#sintaxis-básica",
    "href": "reintro_a_r.html#sintaxis-básica",
    "title": "1  (Re)introducción a R para Biología y Bioinformática",
    "section": "1.3 Sintaxis Básica",
    "text": "1.3 Sintaxis Básica\nComencemos con algunos comandos y operaciones básicas en R. Abre RStudio y prueba los siguientes ejemplos.\n\n1.3.1 Asignación de Variables\nEn R, puedes asignar valores a variables utilizando el operador &lt;-. Una variable es una forma de almacenar información que puedes usar y manipular más adelante.\n\n# Asignar longitudes de secuencias de ADN a variables\nlength_gene1 &lt;- 1500\nlength_gene2 &lt;- 1200\n\n# Imprimir las variables\nlength_gene1\n\n[1] 1500\n\nlength_gene2\n\n[1] 1200\n\n# Realizar operaciones con variables\ntotal_length &lt;- length_gene1 + length_gene2\ntotal_length\n\n[1] 2700\n\n\n\n\n1.3.2 Tipos de Datos\nR tiene varios tipos de datos, incluyendo numéricos (números), caracteres (texto) y lógicos (VERDADERO/FALSO).\n\n# Numérico\nsequence_length &lt;- 1500\nclass(sequence_length)\n\n[1] \"numeric\"\n\n# Caracter\nspecies &lt;- \"Homo sapiens\"\nclass(species)\n\n[1] \"character\"\n\n# Lógico\nis_protein_coding &lt;- TRUE\nclass(is_protein_coding)\n\n[1] \"logical\"\n\n\n\n\n1.3.3 Operaciones numéricas básicas\nEl contenido de GC se refiere al porcentaje de bases nitrogenadas guanina (G) y citosina (C) en una molécula de ADN. Es una medida importante porque:\n\nEstabilidad del ADN: Las regiones del ADN con alto contenido de GC son más estables debido al triple enlace de hidrógeno entre G y C, en comparación con el doble enlace de A y T.\nEvolución y Adaptación: Las diferencias en el contenido de GC pueden reflejar adaptaciones evolutivas a diferentes temperaturas ambientales, ya que las regiones con alto GC pueden ser más resistentes al calor.\nFunción Genómica: Algunas regiones funcionales del genoma, como los promotores de genes y las islas CpG, tienden a tener un alto contenido de GC, lo cual es crucial para la regulación genética.\n\n\n# Calcular el contenido de GC de una secuencia de ADN \ng &lt;- 200\nc &lt;- 180\na &lt;- 150\nt &lt;- 170\n# Número total de nucleótidos \ntotal_nt &lt;- g + c + a + t  \n# Porcentaje de contenido de GC \ngc_content &lt;- ((g + c) / total_nt) * 100 \ngc_content\n\n[1] 54.28571\n\n\n\n# Algunas operaciones extras son\n# la raiz\nsqrt(4)\n\n[1] 2\n\n# la exponencial\nexp(2)\n\n[1] 7.389056\n\n# elevar con una potencia\n2^3\n\n[1] 8\n\nsqrt(4)^2\n\n[1] 4",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>(Re)introducción a R para Biología y Bioinformática</span>"
    ]
  },
  {
    "objectID": "reintro_a_r.html#estructuras-de-datos-básicas",
    "href": "reintro_a_r.html#estructuras-de-datos-básicas",
    "title": "1  (Re)introducción a R para Biología y Bioinformática",
    "section": "1.4 Estructuras de Datos Básicas",
    "text": "1.4 Estructuras de Datos Básicas\nR proporciona varias estructuras de datos como vectores, matrices, listas y data frames. Vamos a explorar algunas de estas.\n\n1.4.1 Vectores\nLos vectores son la estructura de datos más básica en R y pueden contener una secuencia de elementos del mismo tipo.\n\n# Crear un vector numérico de longitudes de genes\ngene_lengths &lt;- c(1000, 1500, 2000, 2500, 3000)\ngene_lengths\n\n[1] 1000 1500 2000 2500 3000\n\n# Crear un vector de caracteres de nombres de genes\ngene_names &lt;- c(\"GeneA\", \"GeneB\", \"GeneC\", \"GeneD\", \"GeneE\")\ngene_names\n\n[1] \"GeneA\" \"GeneB\" \"GeneC\" \"GeneD\" \"GeneE\"\n\n\n\n# Algunas operaciones básicas con ellos\n1 + 3 * gene_lengths\n\n[1] 3001 4501 6001 7501 9001\n\nlength(gene_lengths)\n\n[1] 5\n\n# Extraer datos de vector\ngene_lengths[3]\n\n[1] 2000\n\ngene_lengths[2:5]\n\n[1] 1500 2000 2500 3000\n\ngene_lengths[c(2,5)]\n\n[1] 1500 3000\n\n\n\n\n1.4.2 Data Frames\nLos data frames se utilizan para almacenar datos tabulares. Piensa en un data frame como una tabla donde cada columna puede contener diferentes tipos de datos (numéricos, caracteres, etc.).\n\n# Crear un data frame con información de genes\ngenes_df &lt;- data.frame(\n  Name = gene_names,\n  Length = gene_lengths,\n  GC_Content = c(45, 50, 55, 47, 52)\n)\ngenes_df\n\n   Name Length GC_Content\n1 GeneA   1000         45\n2 GeneB   1500         50\n3 GeneC   2000         55\n4 GeneD   2500         47\n5 GeneE   3000         52\n\n\n\n# Extraer datos de dataframe\ngenes_df$Name       # Acceder a una columna por nombre\n\n[1] \"GeneA\" \"GeneB\" \"GeneC\" \"GeneD\" \"GeneE\"\n\ngenes_df[, \"Length\"] # Acceder a una columna por nombre usando índices\n\n[1] 1000 1500 2000 2500 3000\n\ngenes_df[1, ] # Acceder a la primera fila\n\n   Name Length GC_Content\n1 GeneA   1000         45\n\nclass(genes_df[1, ]) # miremos la clase de dato que devuelve\n\n[1] \"data.frame\"\n\ngenes_df[1:2,] \n\n   Name Length GC_Content\n1 GeneA   1000         45\n2 GeneB   1500         50\n\ngenes_df[c(1, 3),]\n\n   Name Length GC_Content\n1 GeneA   1000         45\n3 GeneC   2000         55\n\ngenes_df[c(1,3)]\n\n   Name GC_Content\n1 GeneA         45\n2 GeneB         50\n3 GeneC         55\n4 GeneD         47\n5 GeneE         52\n\n\n\n# obtener algunas metricas sobre el dataframe\ndim(genes_df)\n\n[1] 5 3\n\nsummary(genes_df)\n\n     Name               Length       GC_Content  \n Length:5           Min.   :1000   Min.   :45.0  \n Class :character   1st Qu.:1500   1st Qu.:47.0  \n Mode  :character   Median :2000   Median :50.0  \n                    Mean   :2000   Mean   :49.8  \n                    3rd Qu.:2500   3rd Qu.:52.0  \n                    Max.   :3000   Max.   :55.0",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>(Re)introducción a R para Biología y Bioinformática</span>"
    ]
  },
  {
    "objectID": "reintro_a_r.html#graficación-básica",
    "href": "reintro_a_r.html#graficación-básica",
    "title": "1  (Re)introducción a R para Biología y Bioinformática",
    "section": "1.5 Graficación Básica",
    "text": "1.5 Graficación Básica\nR es bien conocido por sus potentes capacidades de graficado. Aquí, crearemos un gráfico simple usando la función incorporada plot.\n\n1.5.1 Gráfico de Dispersión\n\n# Gráfico de dispersión básico de longitudes de genes vs contenido de GC\nplot(genes_df$Length, genes_df$GC_Content, main=\"Longitud de Genes vs Contenido de GC\", xlab=\"Longitud de Genes\", ylab=\"Contenido de GC (%)\")\n\n\n\n\n\n\n\n\n\n\n1.5.2 Histograma\n\n# Histograma básico de longitudes de genes\nhist(genes_df$Length, main=\"Distribución de Longitudes de Genes\", xlab=\"Longitud de Genes\", col=\"green\", border=\"black\")\n\n\n\n\n\n\n\n\n\n\n1.5.3 Boxplot\n\n# Boxplot básico de longitudes de genes \nboxplot(genes_df$Length, main=\"Distribución de Longitudes de Genes\", xlab=\"Longitud de Genes\", col=\"blue\", border=\"black\")\n\n\n\n\n\n\n\n\n\n\n1.5.4 Visualización de gráficas avanzada con ggplot2\n\nlibrary(ggplot2)\nggplot(genes_df, aes(x=Length)) + geom_boxplot(fill=\"slateblue\", alpha=0.2)\n\n\n\n\n\n\n\nggplot(genes_df, aes(x=Length, y=GC_Content)) + geom_point() + xlab(\"Longitud de Genes\") + ylab(\"Contenido de GC (%)\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>(Re)introducción a R para Biología y Bioinformática</span>"
    ]
  },
  {
    "objectID": "reintro_a_r.html#introducción-al-análisis-de-redes-con-igraph",
    "href": "reintro_a_r.html#introducción-al-análisis-de-redes-con-igraph",
    "title": "1  (Re)introducción a R para Biología y Bioinformática",
    "section": "1.6 Introducción al Análisis de Redes con igraph",
    "text": "1.6 Introducción al Análisis de Redes con igraph\nEl análisis de redes es un aspecto crucial de la bioinformática, especialmente en la comprensión de vías e interacciones biológicas. El paquete igraph en R es una herramienta poderosa para crear y analizar grafos.\n\n1.6.1 Instalación y Carga de igraph\nPrimero, necesitas cargar el paquete igraph.\n¿Qué es un Paquete en R? En R, un paquete es una colección de funciones, datos y código que extienden las capacidades básicas del lenguaje. Los paquetes son creados por la comunidad de R y están diseñados para abordar tareas específicas, desde análisis estadísticos avanzados hasta visualización de datos y manejo de datos biológicos. Los paquetes facilitan el trabajo con R al proporcionar herramientas adicionales que puedes usar en tus scripts y análisis.\nInstalación y Carga de Paquetes Para utilizar un paquete en R, primero necesitas instalarlo (si no está ya instalado) y luego cargarlo en tu sesión de R.\nInstalación de Paquetes Puedes instalar un paquete desde CRAN (Comprehensive R Archive Network) utilizando la función install.packages():\nAhora vamos a cargar un paquee que ya esta instalado, usando el comando library()\n\n# Cargar paquete igraph\nlibrary(igraph)\n\n\nAttaching package: 'igraph'\n\n\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n\n\nThe following object is masked from 'package:base':\n\n    union\n\n\n\n\n1.6.2 Creación de una Red Simple\nRepresentar proteínas en un formato de red puede ser útil por varias razones:\n\nVisualización de Interacciones: Permite ver cómo las proteínas interactúan entre sí y formar una visión general de las redes de interacción.\nIdentificación de Proteínas Clave: Ayuda a identificar proteínas que tienen un papel central o que son esenciales en la red.\nAnálisis de Funciones Biológicas: Facilita la comprensión de las funciones biológicas y cómo las alteraciones en una proteína pueden afectar toda la red.\n\nVamos a crear una red simple de interacciones proteína-proteína.\n\n# Definir aristas (interacciones) entre proteínas\nedges &lt;- c(\"ProteinA\", \"ProteinB\",\n           \"ProteinA\", \"ProteinC\",\n           \"ProteinB\", \"ProteinC\",\n           \"ProteinB\", \"ProteinD\",\n           \"ProteinB\", \"ProteinE\",\n           \"ProteinC\", \"ProteinE\")\n\n# Crear un objeto de grafo\ng &lt;- graph(edges, directed=FALSE)\n\n\n# Extracción de principales objetos\nV(g)\n\n+ 5/5 vertices, named, from 94ec266:\n[1] ProteinA ProteinB ProteinC ProteinD ProteinE\n\nE(g)\n\n+ 6/6 edges from 94ec266 (vertex names):\n[1] ProteinA--ProteinB ProteinA--ProteinC ProteinB--ProteinC ProteinB--ProteinD\n[5] ProteinB--ProteinE ProteinC--ProteinE\n\nV(g)$name\n\n[1] \"ProteinA\" \"ProteinB\" \"ProteinC\" \"ProteinD\" \"ProteinE\"\n\n\n\n# Graficar el grafo\nplot(g, vertex.label=V(g)$name, main=\"Red de Interacción Proteína-Proteína\")\n\n\n\n\n\n\n\n\n\n# Incorporar vértices\ng &lt;- add_vertices(g, 1, name = \"NewProtein\")\nplot(g, vertex.label=V(g)$name, main=\"Red de Interacción Proteína-Proteína\")\n\n\n\n\n\n\n\n# Incorporar edges\ng &lt;- add_edges(g, edges = c(\"ProteinD\", \"NewProtein\"), directed=FALSE)\nplot(g, vertex.label=V(g)$name, main=\"Red de Interacción Proteína-Proteína\")\n\n\n\n\n\n\n\n\n\n\n1.6.3 Análisis de la Red\nPuedes realizar varios análisis en la red, como encontrar el grado de cada nodo.\n\n# Calcular el grado de cada nodo\ndegree(g)\n\n  ProteinA   ProteinB   ProteinC   ProteinD   ProteinE NewProtein \n         2          4          3          2          2          1 \n\nbetweenness(g)\n\n  ProteinA   ProteinB   ProteinC   ProteinD   ProteinE NewProtein \n       0.0        6.5        0.5        4.0        0.0        0.0 \n\n# Graficar el grafo con tamaños de nodo proporcionales a su grado\nplot(g, vertex.size=degree(g)*10, vertex.label=V(g)$name, main=\"Red de Interacción Proteína-Proteína (Tamaño del Nodo ~ Grado)\")\n\n\n\n\n\n\n\n\n\nhist(degree(g), main=\"Distribución del grado de los nodos\", xlab=\"\", col=\"blue\", border=\"black\")\n\n\n\n\n\n\n\nplot(betweenness(g), degree(g), main=\"Betweenness vs degree\", xlab=\"Betweenness\", ylab=\"Degree\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>(Re)introducción a R para Biología y Bioinformática</span>"
    ]
  },
  {
    "objectID": "reintro_a_r.html#conclusión",
    "href": "reintro_a_r.html#conclusión",
    "title": "1  (Re)introducción a R para Biología y Bioinformática",
    "section": "1.7 Conclusión",
    "text": "1.7 Conclusión\nAhora has sido introducido a los conceptos básicos de la programación en R con ejemplos relevantes para la biología y la bioinformática. Hemos cubierto operaciones aritméticas básicas, asignación de variables, tipos de datos, estructuras de datos, graficación simple y una introducción al análisis de redes con igraph. Continúa practicando para familiarizarte más con R y explora temas más avanzados a medida que progresas.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>(Re)introducción a R para Biología y Bioinformática</span>"
    ]
  },
  {
    "objectID": "reintro_a_r.html#recursos-adicionales",
    "href": "reintro_a_r.html#recursos-adicionales",
    "title": "1  (Re)introducción a R para Biología y Bioinformática",
    "section": "1.8 Recursos Adicionales",
    "text": "1.8 Recursos Adicionales\nAquí hay algunos recursos para ayudarte a seguir aprendiendo R y bioinformática: - Documentación de R - Bioconductor - Hojas de Referencia de RStudio",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>(Re)introducción a R para Biología y Bioinformática</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Summary</span>"
    ]
  }
]